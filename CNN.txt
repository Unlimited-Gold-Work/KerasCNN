參考網址https://medium.com/@yehjames/%E8%B3%87%E6%96%99%E5%88%86%E6%9E%90-%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92-%E7%AC%AC5-1%E8%AC%9B-%E5%8D%B7%E7%A9%8D%E7%A5%9E%E7%B6%93%E7%B6%B2%E7%B5%A1%E4%BB%8B%E7%B4%B9-convolutional-neural-network-4f8249d65d4f

http://tensorflowkeras.blogspot.com/2017/10/kerasdeep-learningcnncifar-10.html

標準化參考https://zhuanlan.zhihu.com/p/35597976

適合用於影像辨識

經過兩次的Convolution, Pooling, Fully Connected 就是CNN

Convolution Layer 卷積層
 卷積運算:寬or高(以等比來看mxm)-feature(nxn) = feature map([m-n]x[m-n])
   p.s. feature 會隨機產生好幾種mode(filter),用途為萃取特徵
   feature隨機16版面產生-->不同的feature map集結成--> convolutional layer
   可使用'relu'函數去掉負值,更能萃取物體外型

Pooling Layer池化層
  Max Pooling:挑出矩陣當中最大值,圖片平移幾pixel對判斷上不造成影響
    p.s. 以2像素間隔抓取基準範圍(strides)

Fully Connected Layer 全連接層
  將結果(pooled feature map)平坦化後接到最基本的神經網路(row space)

參考資料https://morvanzhou.github.io/tutorials/machine-learning/ML-intro/3-05-overfitting/
p.s overfitting(過度凝合)--機器學習過度於糾結誤差值,故無法成功表達訓練數據外的其他數據
	解決方法: 增加數據量
